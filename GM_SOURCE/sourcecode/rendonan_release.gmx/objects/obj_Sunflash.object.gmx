<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store original x- and y positions of instance
xxx=x
yyy=y

//calculate position of sky, relative to original x,y positions. (sunflash sprite is drawn as a straight line dropping from the sky, yinit is where this ray comes from)
xinit=xxx
yinit=yyy-650;

time=90         //defines when instance is dead (90)

radmax=300;     //max distance (radius) after which radius will reset to distance 0 from center (animation)
rad1=0;         //counter which increases (mod radmax), draws particles at rad1-distance from center
edges=4;        //number of directions the lightray deflects off the ground
hitcount = 30   //number of times the sunflash skill will hit the monster

//for each hit
for (i=0; i&lt;hitcount; i+=1)
{
    //Initiate damage per hit
    dmg[i] = round((0.02*obj_Controller.strength+random(4))*random(5));
    
    //set a random position near x and y position for each strike
    draw_dmg_x[i]           = x-300+round(random(450));
    draw_dmg_y[i]           = y-250+round(random(450));
    
    //timers, starttimer=queue for msg to popup, stoptimer = queue for msg to stop, timer = counter throughout.
    draw_dmg_timer[i]       = 0
    draw_dmg_starttimer[i]  = round(random(40));
    draw_dmg_stoptimer[i]   = 45 + round(random(45));
}

//call the particle creation script
scr_sunflash_init(0);

//set up the particle emitter region
//center burn
part_emitter_region(sunflashpartsys_fire,mypart[0],xxx-10,xxx+10,yyy-5,yyy+5,ps_shape_rectangle,ps_distr_linear);

//initialise initial position-values for deflected lightrays
for (i=0; i&lt;edges; i+=1)
{
    x1[i+1] = xxx+rad1*cos(-(360/edges)/2)
    x2[i+1] = xxx+rad1*cos(+(360/edges)/2)
    y1[i+1] = yyy+rad1*sin(+(360/edges)/2)
    y2[i+1] = yyy+rad1*sin(-(360/edges)/2)
    scr_sunflash_init(i+1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//destroy emitter when instance is destroyed
for (i=0; i&lt;edges+1; i+=1)
{
    part_emitter_destroy(sunflashpartsys_fire,mypart[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PARTICLE CENTER EMITTER LOCATION
part_emitter_region(sunflashpartsys_fire,mypart[0],xxx-10,xxx+10,yyy-5,yyy+5,ps_shape_rectangle,ps_distr_linear);
part_emitter_burst(sunflashpartsys_fire,mypart[0],sunflashpart_fire,10);

//MODIFY POSITION PER EDGE
for (i=0; i&lt;edges; i+=1)
{
    x1[i+1] = xxx+rad1*cos(-i*(360/edges)/2)
    x2[i+1] = xxx+rad1*cos(+i*(360/edges)/2)
    y1[i+1] = yyy+rad1*sin(+i*(360/edges)/2)
    y2[i+1] = yyy+rad1*sin(-i*(360/edges)/2)
}

//PARTICLE EDGE EMITTER LOCATION
for (i=0; i&lt;edges; i+=1)
{
    part_emitter_region(sunflashpartsys_fire,mypart[i+1],x1[i+1]-10,x2[i+1]+10,y1[i+1]-5,y2[i+1]+5,ps_shape_rectangle,ps_distr_linear);
    part_emitter_burst(sunflashpartsys_fire,mypart[i+1],sunflashpart_fire,10);
}

//continuously increment radians
rad1+=10
if rad1 &gt;= radmax {rad1=0};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw main line of sunflash in the skill center
draw_sprite_ext(spr_Sunflash,0,xinit,yinit,1,(y-yinit),0,c_white,1);

//draw each damage message-box
for (i=0; i&lt;array_length_1d(dmg); i+=1)
{
    draw_dmg_timer[i] +=1; //increment all timers
    
    //more special effects: flash screen each time a new box pops up
    //..and of course inflict the damage
    if (draw_dmg_timer[i] == draw_dmg_starttimer[i])
    {
        draw_set_color(c_orange);
        draw_set_alpha(0.05+random(0.1));
        
        draw_rectangle(0,0,room_width,room_height,0);
        draw_restore();
        if (instance_exists(obj_Monster))
        {
            obj_Monster.currenthp -= dmg[i];
        }
    }
    
    if (draw_dmg_timer[i] &gt;= draw_dmg_starttimer[i] &amp;&amp; draw_dmg_timer[i] &lt;= draw_dmg_stoptimer[i])
    {
        //draw damage done by sunflash skill, from- and to a random amount of time
        draw_text_bg(draw_dmg_x[i],draw_dmg_y[i],string(dmg[i]));
    }
}



//continuously decrement timer, kill instance when timer runs out.
time-=1;
if time &lt;= 0 {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
