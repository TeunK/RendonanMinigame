<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TEST MODE</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font0);
connectTimer = 60;

// TEST_MODE:
// 0 = game_mode
// 1 = test_mode
// 2 = unit_tests

test_mode               = 0;
active_testing          = 0; //ignore, when toggled, will display popup messages with test-results
toggle_active_testing   = vk_space; //required key to press to toggle active_testing

if (test_mode==2)
{
    room_goto(room_Test);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>HTTP FETCH USER</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HTTP CONNECTION URL'S

//url for loading user data
load_url    = "http://localhost/rendonan_release/web/app_dev.php/gameload";

//url for saving user progress
save_url    = "http://localhost/rendonan_release/web/app_dev.php/gamesave";

//url for saving user stats into highscores
score_url   = "http://localhost/rendonan_release/web/app_dev.php/scoresave";

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>INIT DUMMY USER STATS</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>init_userStats();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room==room_Game)
{
    //set atkTimer increase depending on auto-atk-mode and agility
    if (!autoatk) 
    {
        atkTimer += (0.6+agility/50);
    }
    else
    {
        atkTimer += (0.3+agility/80);
    }
    
    //SAVE SCRIPT
    //save timer
    savetimer += 1;
    savedelay = 300; //auto-save game progress every 5 seconds
    
    if (savetimer &gt;= savedelay)
    {
        savetimer=0;
        save_game(save_url);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//FETCH USER DATA FROM HTTP REQUEST
if (ds_map_find_value(async_load, "id") == http)
{
    if (ds_map_find_value(async_load, "status") &gt;= 0)
    {
        var user_data
        user_data = ds_map_find_value(async_load, "result"); //user_data = string from received from php file
        user_data = explode_string(user_data,";"); //user_data = array (exploded string resulting from php-string)
        
        //render user_data array into user stat variables
        read_userdata(user_data);
        if (room==room_Connect)
        {
            room_goto(room_Game)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>INIT VARIABLES</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room==room_Game)
{
    //SAVE TIMER
    savetimer = 0;
    savedelay = 300; //auto-save game progress every 5 seconds
    
    //CALC STAT
    hpPercent   = calc_percent(currenthp,maxhp);
    autoatk     = false;
    autostr     = "Manual Atk";
    atkTimer    = 5;
    atkLimit    = 45;
    
    //CREATE MENU BUTTONS
    btnHP   = instance_create(20,y+20+5*15,obj_Button);
    btnStr  = instance_create(20,y+20+6*15,obj_Button);
    btnAgi  = instance_create(20,y+20+7*15,obj_Button);
    
    //CREATE MONSTER
    monsterSpawnTimer      = 0 //sake of initialization, ignore.
    monsterSpawnLimit      = 60;
    monsterSpawnLevel      = 1;
    
    sunflashTimer=0;
    sunflashLimit=300;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Crosshair for in-game building purpose:
if (keyboard_check(vk_control))
{
    draw_crosshair(mouse_x,mouse_y);
}
/////////////////////////////////////////

if (room==room_Connect)
{

    //delay to trigger connection
    connectTimer -=1;
    if (connectTimer &lt;= 0)
    {
        http = http_get(load_url);
        connectTimer = 60;
    }
    
    //draw test-timers (in test-mode)
    test_timer(80,40,connectTimer,0,"Connecting..");
    draw_text_bg(room_width/2,room_height/2,"Attempting to establish connection to server...#Please Wait");
}
else if (room==room_Game)
{
    //toggle test_mode (in test-mode)
    test_toggleActiveMode(toggle_active_testing);
    
    //draw game-save panel (in test-mode)
    test_timer(room_width/2, 30, savedelay-savetimer, 0, "Saving Game...");
    
    //draw interfaces
    draw_UI(username, xp, coins, currenthp, maxhp, strength, agility);
    draw_menu();
    
    //Respawn Monsters
    monster_respawn();
    
    //Player Death
    player_death();
    
    //Health Regeneration
    if (currenthp &lt; maxhp)
    { currenthp += 0.0001*maxhp; }
    
    //Limit Health
    if currenthp &gt; maxhp
    { currenthp = maxhp; }
}
else if (room==room_Death)
{

    draw_text_bg(room_width/2,room_height/2,"Oh dear.. You have died.##Your memorial has been passed on to the highscores.#Press &lt;spacebar&gt; to be reborn.");

    //restart game upon spacebar-press
    if keyboard_check_pressed(vk_space)
    {
        game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
